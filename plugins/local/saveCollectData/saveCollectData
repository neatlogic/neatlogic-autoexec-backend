#!/usr/bin/perl
use FindBin;
use lib "$FindBin::Bin/../lib/perl-lib/lib/perl5";
use lib "$FindBin::Bin/../lib";
use lib "$FindBin::Bin/";

use strict;
use IO::File;
use Getopt::Long;
use File::Basename;
use utf8;
use Cwd;
use JSON;
use File::Slurper 'read_text';

use Utils;
use CmdbUtils;

use Data::Dumper;

sub usage {
    my $pname = basename($0);

    print("Usage: $pname [--jobid <jobid>][-p|--param <param>] \n");
    print("       param: pre phase plugin output param key.\n");
    exit(1);
}

sub main {
    my ( $ishelp, $param, $jobId );

    Utils::setEnv();
    my $pname = basename($0);

    GetOptions(
        'help'      => \$ishelp,
        'h|param:s' => \$param,
        'jobid:s'   => \$jobId
    );

    if ( not defined($param) or $param eq '' ) {
        usage();
        exit(0);
    }

    $param =~ s/#//;
    $param =~ s/\}//;
    $param =~ s/\{//;

    my @keys     = split /\./, $param;
    my $preName  = @keys[0];
    my $preOptId = @keys[1];
    my $preParam = @keys[2];

    my $AUTOEXEC_JOBID = $ENV{'AUTOEXEC_JOBID'};
    if ( defined($AUTOEXEC_JOBID) and $AUTOEXEC_JOBID ne '' ) {
        $jobId = $AUTOEXEC_JOBID;
    }

    my $cmdbUtil = new CmdbUtils();

    my $isSuccess;
    my $pwd = getcwd;
    print("pwd:$pwd\n");
    my $output_path = "$pwd/../../../data/job/$jobId/output/*";
    print("output:$output_path\n");

    #my $output_path = "/tmp/autoexec/plugins/local/lib/../../../data/job/$jobId/output/*";
    my @nodefiles = glob($output_path);
    foreach my $node (@nodefiles) {
        my $content      = read_text($node);
        my $content_json = decode_json($content);
        my $node_data    = $content_json->{$preOptId}->{$preParam};
        if ( defined($node_data) and $node_data eq '' ) {
            my $collect_data = $node_data->{data};
            foreach my $real_data (@$collect_data) {

                my $table      = $real_data->{'table'};
                my $uniqueName = $real_data->{'uniqueName'};
                my $data       = $real_data->{'data'};

                $isSuccess = $cmdbUtil->saveCollectData( table => $table, uniqueName => $uniqueName, data => $data );
                if ( $isSuccess ne 0 ) {
                    last;
                }
            }
        }
    }

    if ( $isSuccess == 0 ) {
        print("INFO: $pname phase $preName $preOptId data save success.\n");
    }
    else {
        print("ERROR: $pname phase $preName $preOptId data save failed.\n");
    }
    return $isSuccess;
}

exit( main() );

