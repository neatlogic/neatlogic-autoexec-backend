.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Spreadsheet::WriteExcel::Chart::Stock 3"
.TH Spreadsheet::WriteExcel::Chart::Stock 3 "2021-05-28" "perl v5.28.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Stock \- A writer class for Excel Stock charts.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
To create a simple Excel file with a Stock chart using Spreadsheet::WriteExcel:
.PP
.Vb 1
\&    #!/usr/bin/perl \-w
\&
\&    use strict;
\&    use Spreadsheet::WriteExcel;
\&
\&    my $workbook  = Spreadsheet::WriteExcel\->new( \*(Aqchart.xls\*(Aq );
\&    my $worksheet = $workbook\->add_worksheet();
\&
\&    my $chart     = $workbook\->add_chart( type => \*(Aqstock\*(Aq );
\&
\&    # Add a series for each Open\-High\-Low\-Close.
\&    $chart\->add_series( categories => \*(Aq=Sheet1!$A$2:$A$6\*(Aq, values => \*(Aq=Sheet1!$B$2:$B$6\*(Aq );
\&    $chart\->add_series( categories => \*(Aq=Sheet1!$A$2:$A$6\*(Aq, values => \*(Aq=Sheet1!$C$2:$C$6\*(Aq );
\&    $chart\->add_series( categories => \*(Aq=Sheet1!$A$2:$A$6\*(Aq, values => \*(Aq=Sheet1!$D$2:$D$6\*(Aq );
\&    $chart\->add_series( categories => \*(Aq=Sheet1!$A$2:$A$6\*(Aq, values => \*(Aq=Sheet1!$E$2:$E$6\*(Aq );
\&
\&    # Add the worksheet data the chart refers to.
\&    # ... See the full example below.
\&
\&    _\|_END_\|_
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module implements Stock charts for Spreadsheet::WriteExcel. The chart object is created via the Workbook \f(CW\*(C`add_chart()\*(C'\fR method:
.PP
.Vb 1
\&    my $chart = $workbook\->add_chart( type => \*(Aqstock\*(Aq );
.Ve
.PP
Once the object is created it can be configured via the following methods that are common to all chart classes:
.PP
.Vb 4
\&    $chart\->add_series();
\&    $chart\->set_x_axis();
\&    $chart\->set_y_axis();
\&    $chart\->set_title();
.Ve
.PP
These methods are explained in detail in Spreadsheet::WriteExcel::Chart. Class specific methods or settings, if any, are explained below.
.SH "Stock Chart Methods"
.IX Header "Stock Chart Methods"
There aren't currently any stock chart specific methods. See the \s-1TODO\s0 section of Spreadsheet::WriteExcel::Chart.
.PP
The default Stock chart is an Open-High-Low-Close chart. A series must be added for each of these data sources.
.PP
The default Stock chart is in black and white. User defined colours will be added at a later stage.
.SH "EXAMPLE"
.IX Header "EXAMPLE"
Here is a complete example that demonstrates most of the available features when creating a Stock chart.
.PP
.Vb 1
\&    #!/usr/bin/perl \-w
\&
\&    use strict;
\&    use Spreadsheet::WriteExcel;
\&
\&    my $workbook    = Spreadsheet::WriteExcel\->new( \*(Aqchart_stock_ex.xls\*(Aq );
\&    my $worksheet   = $workbook\->add_worksheet();
\&    my $bold        = $workbook\->add_format( bold => 1 );
\&    my $date_format = $workbook\->add_format( num_format => \*(Aqdd/mm/yyyy\*(Aq );
\&
\&    # Add the worksheet data that the charts will refer to.
\&    my $headings = [ \*(AqDate\*(Aq, \*(AqOpen\*(Aq, \*(AqHigh\*(Aq, \*(AqLow\*(Aq, \*(AqClose\*(Aq ];
\&    my @data = (
\&        [ \*(Aq2009\-08\-23\*(Aq, 110.75, 113.48, 109.05, 109.40 ],
\&        [ \*(Aq2009\-08\-24\*(Aq, 111.24, 111.60, 103.57, 104.87 ],
\&        [ \*(Aq2009\-08\-25\*(Aq, 104.96, 108.00, 103.88, 106.00 ],
\&        [ \*(Aq2009\-08\-26\*(Aq, 104.95, 107.95, 104.66, 107.91 ],
\&        [ \*(Aq2009\-08\-27\*(Aq, 108.10, 108.62, 105.69, 106.15 ],
\&    );
\&
\&    $worksheet\->write( \*(AqA1\*(Aq, $headings, $bold );
\&
\&    my $row = 1;
\&    for my $data ( @data ) {
\&        $worksheet\->write( $row, 0, $data\->[0], $date_format );
\&        $worksheet\->write( $row, 1, $data\->[1] );
\&        $worksheet\->write( $row, 2, $data\->[2] );
\&        $worksheet\->write( $row, 3, $data\->[3] );
\&        $worksheet\->write( $row, 4, $data\->[4] );
\&        $row++;
\&    }
\&
\&    # Create a new chart object. In this case an embedded chart.
\&    my $chart = $workbook\->add_chart( type => \*(Aqstock\*(Aq, embedded => 1 );
\&
\&    # Add a series for each of the Open\-High\-Low\-Close columns.
\&    $chart\->add_series(
\&        categories => \*(Aq=Sheet1!$A$2:$A$6\*(Aq,
\&        values     => \*(Aq=Sheet1!$B$2:$B$6\*(Aq,
\&        name       => \*(AqOpen\*(Aq,
\&    );
\&
\&    $chart\->add_series(
\&        categories => \*(Aq=Sheet1!$A$2:$A$6\*(Aq,
\&        values     => \*(Aq=Sheet1!$C$2:$C$6\*(Aq,
\&        name       => \*(AqHigh\*(Aq,
\&    );
\&
\&    $chart\->add_series(
\&        categories => \*(Aq=Sheet1!$A$2:$A$6\*(Aq,
\&        values     => \*(Aq=Sheet1!$D$2:$D$6\*(Aq,
\&        name       => \*(AqLow\*(Aq,
\&    );
\&
\&    $chart\->add_series(
\&        categories => \*(Aq=Sheet1!$A$2:$A$6\*(Aq,
\&        values     => \*(Aq=Sheet1!$E$2:$E$6\*(Aq,
\&        name       => \*(AqClose\*(Aq,
\&    );
\&
\&    # Add a chart title and some axis labels.
\&    $chart\->set_title( name => \*(AqOpen\-High\-Low\-Close\*(Aq, );
\&    $chart\->set_x_axis( name => \*(AqDate\*(Aq, );
\&    $chart\->set_y_axis( name => \*(AqShare price\*(Aq, );
\&
\&    # Insert the chart into the worksheet (with an offset).
\&    $worksheet\->insert_chart( \*(AqF2\*(Aq, $chart, 25, 10 );
\&
\&    _\|_END_\|_
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
John McNamara jmcnamara@cpan.org
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright MM-MMX, John McNamara.
.PP
All Rights Reserved. This module is free software. It may be used, redistributed and/or modified under the same terms as Perl itself.
