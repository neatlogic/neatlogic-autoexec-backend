.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Mojo::Cookie::Response 3"
.TH Mojo::Cookie::Response 3 "2021-02-09" "perl v5.28.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mojo::Cookie::Response \- HTTP response cookie
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  use Mojo::Cookie::Response;
\&
\&  my $cookie = Mojo::Cookie::Response\->new;
\&  $cookie\->name(\*(Aqfoo\*(Aq);
\&  $cookie\->value(\*(Aqbar\*(Aq);
\&  say "$cookie";
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Mojo::Cookie::Response is a container for \s-1HTTP\s0 response cookies, based on
\&\s-1RFC 6265\s0 <http://tools.ietf.org/html/rfc6265>.
.SH "ATTRIBUTES"
.IX Header "ATTRIBUTES"
Mojo::Cookie::Response inherits all attributes from Mojo::Cookie and
implements the following new ones.
.SS "domain"
.IX Subsection "domain"
.Vb 2
\&  my $domain = $cookie\->domain;
\&  $cookie    = $cookie\->domain(\*(Aqlocalhost\*(Aq);
.Ve
.PP
Cookie domain.
.SS "expires"
.IX Subsection "expires"
.Vb 2
\&  my $expires = $cookie\->expires;
\&  $cookie     = $cookie\->expires(time + 60);
.Ve
.PP
Expiration for cookie.
.SS "httponly"
.IX Subsection "httponly"
.Vb 2
\&  my $bool = $cookie\->httponly;
\&  $cookie  = $cookie\->httponly($bool);
.Ve
.PP
HttpOnly flag, which can prevent client-side scripts from accessing this
cookie.
.SS "max_age"
.IX Subsection "max_age"
.Vb 2
\&  my $max_age = $cookie\->max_age;
\&  $cookie     = $cookie\->max_age(60);
.Ve
.PP
Max age for cookie.
.SS "origin"
.IX Subsection "origin"
.Vb 2
\&  my $origin = $cookie\->origin;
\&  $cookie    = $cookie\->origin(\*(Aqmojolicious.org\*(Aq);
.Ve
.PP
Origin of the cookie.
.SS "path"
.IX Subsection "path"
.Vb 2
\&  my $path = $cookie\->path;
\&  $cookie  = $cookie\->path(\*(Aq/test\*(Aq);
.Ve
.PP
Cookie path.
.SS "secure"
.IX Subsection "secure"
.Vb 2
\&  my $bool = $cookie\->secure;
\&  $cookie  = $cookie\->secure($bool);
.Ve
.PP
Secure flag, which instructs browsers to only send this cookie over \s-1HTTPS\s0
connections.
.SH "METHODS"
.IX Header "METHODS"
Mojo::Cookie::Response inherits all methods from Mojo::Cookie and
implements the following new ones.
.SS "parse"
.IX Subsection "parse"
.Vb 1
\&  my $cookies = Mojo::Cookie::Response\->parse(\*(Aqf=b; path=/\*(Aq);
.Ve
.PP
Parse cookies.
.SS "to_string"
.IX Subsection "to_string"
.Vb 1
\&  my $str = $cookie\->to_string;
.Ve
.PP
Render cookie.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Mojolicious, Mojolicious::Guides, <http://mojolicious.org>.
