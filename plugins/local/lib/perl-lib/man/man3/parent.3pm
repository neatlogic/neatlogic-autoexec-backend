.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "parent 3"
.TH parent 3 "2021-07-29" "perl v5.16.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
parent \- Establish an ISA relationship with base classes at compile time
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&    package Baz;
\&    use parent qw(Foo Bar);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Allows you to both load one or more modules, while setting up inheritance from
those modules at the same time.  Mostly similar in effect to
.PP
.Vb 6
\&    package Baz;
\&    BEGIN {
\&        require Foo;
\&        require Bar;
\&        push @ISA, qw(Foo Bar);
\&    }
.Ve
.PP
By default, every base class needs to live in a file of its own.
If you want to have a subclass and its parent class in the same file, you
can tell \f(CW\*(C`parent\*(C'\fR not to load any modules by using the \f(CW\*(C`\-norequire\*(C'\fR switch:
.PP
.Vb 2
\&  package Foo;
\&  sub exclaim { "I CAN HAS PERL" }
\&
\&  package DoesNotLoadFooBar;
\&  use parent \-norequire, \*(AqFoo\*(Aq, \*(AqBar\*(Aq;
\&  # will not go looking for Foo.pm or Bar.pm
.Ve
.PP
This is equivalent to the following code:
.PP
.Vb 2
\&  package Foo;
\&  sub exclaim { "I CAN HAS PERL" }
\&
\&  package DoesNotLoadFooBar;
\&  push @DoesNotLoadFooBar::ISA, \*(AqFoo\*(Aq, \*(AqBar\*(Aq;
.Ve
.PP
This is also helpful for the case where a package lives within
a differently named file:
.PP
.Vb 3
\&  package MyHash;
\&  use Tie::Hash;
\&  use parent \-norequire, \*(AqTie::StdHash\*(Aq;
.Ve
.PP
This is equivalent to the following code:
.PP
.Vb 3
\&  package MyHash;
\&  require Tie::Hash;
\&  push @ISA, \*(AqTie::StdHash\*(Aq;
.Ve
.PP
If you want to load a subclass from a file that \f(CW\*(C`require\*(C'\fR would
not consider an eligible filename (that is, it does not end in
either \f(CW\*(C`.pm\*(C'\fR or \f(CW\*(C`.pmc\*(C'\fR), use the following code:
.PP
.Vb 3
\&  package MySecondPlugin;
\&  require \*(Aq./plugins/custom.plugin\*(Aq; # contains Plugin::Custom
\&  use parent \-norequire, \*(AqPlugin::Custom\*(Aq;
.Ve
.SH "HISTORY"
.IX Header "HISTORY"
This module was forked from base to remove the cruft
that had accumulated in it.
.SH "CAVEATS"
.IX Header "CAVEATS"
.SH "SEE ALSO"
.IX Header "SEE ALSO"
base
.SH "AUTHORS AND CONTRIBUTORS"
.IX Header "AUTHORS AND CONTRIBUTORS"
RafaÃ«l Garcia-Suarez, Bart Lateur, Max Maischein, Anno Siegel, Michael Schwern
.SH "MAINTAINER"
.IX Header "MAINTAINER"
Max Maischein \f(CW\*(C` corion@cpan.org \*(C'\fR
.PP
Copyright (c) 2007\-10 Max Maischein \f(CW\*(C`<corion@cpan.org>\*(C'\fR
Based on the idea of \f(CW\*(C`base.pm\*(C'\fR, which was introduced with Perl 5.004_04.
.SH "LICENSE"
.IX Header "LICENSE"
This module is released under the same terms as Perl itself.
