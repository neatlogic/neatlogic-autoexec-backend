.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "CharsetDetector 3"
.TH CharsetDetector 3 "2021-05-28" "perl v5.28.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
CharsetDetector \- A Charset Detector, optimized for EastAsia charset and website content
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&        use CharsetDetector;
\&        use CharsetDetector qw(detect detect1);
\&        
\&        #simple use it
\&        $charset = CharsetDetector::detect($octets);
\&        
\&        #with length limit
\&        $charset = CharsetDetector::detect($octets,$max_len);
\&        
\&        #don\*(Aqt consider html head charset as a factor to detect charset
\&        $charset = CharsetDetector::detect1($octets);
\&        $charset = CharsetDetector::detect1($octets,$max_len);
.Ve
.SH "Basic Function"
.IX Header "Basic Function"
.SS "detect \- detect charset"
.IX Subsection "detect - detect charset"
.Vb 2
\&        $charset = CharsetDetector::detect($octets);
\&        $charset = CharsetDetector::detect($octets,$max_len);
.Ve
.SS "detect1 \- detect only by binary"
.IX Subsection "detect1 - detect only by binary"
detect charset don't consider html head charset as a factor to detect charset
by \s-1DEFAULT,\s0 detetor will consider 
html header (e.g. <meta http\-equiv=\*(L"Content\-Type\*(R" content=\*(L"text/html; charset=utf\-8\*(R" /> ) as a factor to detect charset, 
if you don't want detetor to consider html header as a factor, use detect1 instead of detect
.PP
.Vb 2
\&        $charset = CharsetDetector::detect1($octets);
\&        $charset = CharsetDetector::detect1($octets,$max_len);
.Ve
.SS "Return Value"
.IX Subsection "Return Value"
if \f(CW$octets\fR is null return ''
if \f(CW$octets\fR is '' return 'iso\-8859\-1'
else return charset name
.SH "Supported Charset List"
.IX Header "Supported Charset List"
.Vb 1
\&        return value: alias
\&        
\&        ascii       : ascii
\&        iso\-8859\-1  : iso\-8859\-1
\&        utf8        : utf8 utf\-8\-strict
\&        utf16       : utf16
\&        cp936       : euc\-cn(gb2312) cp936(gbk) gb18030
\&        big5\-eten   : big5\-eten
\&        euc\-jp      : euc\-jp
\&        shiftjis    : shiftjis
\&        iso\-2022\-jp : iso\-2022\-jp
\&        euc\-kr      : euc\-kr
\&        iso\-2022\-kr : iso\-2022\-kr
.Ve
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
The CharsetDetector module is Copyright (c) 2003\-2006 \s-1QIAN YU.\s0
All rights reserved.
.PP
You may distribute under the terms of either the \s-1GNU\s0 General Public
License or the Artistic License, as specified in the Perl \s-1README\s0 file.
