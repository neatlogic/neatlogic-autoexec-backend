.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Mojo::Server::PSGI 3"
.TH Mojo::Server::PSGI 3 "2021-07-29" "perl v5.16.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mojo::Server::PSGI \- PSGI server
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  use Mojo::Server::PSGI;
\&
\&  my $psgi = Mojo::Server::PSGI\->new;
\&  $psgi\->unsubscribe(\*(Aqrequest\*(Aq)\->on(request => sub {
\&    my ($psgi, $tx) = @_;
\&
\&    # Request
\&    my $method = $tx\->req\->method;
\&    my $path   = $tx\->req\->url\->path;
\&
\&    # Response
\&    $tx\->res\->code(200);
\&    $tx\->res\->headers\->content_type(\*(Aqtext/plain\*(Aq);
\&    $tx\->res\->body("$method request for $path!");
\&
\&    # Resume transaction
\&    $tx\->resume;
\&  });
\&  my $app = $psgi\->to_psgi_app;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Mojo::Server::PSGI allows Mojolicious applications to run on all \s-1PSGI\s0
compatible servers.
.PP
See \*(L"\s-1DEPLOYMENT\*(R"\s0 in Mojolicious::Guides::Cookbook for more.
.SH "EVENTS"
.IX Header "EVENTS"
Mojo::Server::PSGI inherits all events from Mojo::Server.
.SH "ATTRIBUTES"
.IX Header "ATTRIBUTES"
Mojo::Server::PSGI inherits all attributes from Mojo::Server.
.SH "METHODS"
.IX Header "METHODS"
Mojo::Server::PSGI inherits all methods from Mojo::Server and implements
the following new ones.
.SS "run"
.IX Subsection "run"
.Vb 1
\&  my $res = $psgi\->run($env);
.Ve
.PP
Run \s-1PSGI\s0.
.SS "to_psgi_app"
.IX Subsection "to_psgi_app"
.Vb 1
\&  my $app = $psgi\->to_psgi_app;
.Ve
.PP
Turn Mojo application into \s-1PSGI\s0 application.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Mojolicious, Mojolicious::Guides, <http://mojolicious.org>.
