.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "UUID::URandom 3"
.TH UUID::URandom 3 "2021-05-28" "perl v5.28.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
UUID::URandom \- UUIDs based on /dev/urandom or the Windows Crypto API
.SH "VERSION"
.IX Header "VERSION"
version 0.001
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    use UUID::URandom qw/create_uuid/;
\&
\&    my $uuid = create_uuid();
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module provides a portable, secure generator of
\&\s-1RFC\-4122\s0 <https://tools.ietf.org/html/rfc4122> version 4
(random) UUIDs.  It is a thin wrapper around Crypt::URandom to set
the \s-1UUID\s0 version and variant bits required by the \s-1RFC.\s0
.SH "USAGE"
.IX Header "USAGE"
No functions are exported by default.
.SH "FUNCTIONS"
.IX Header "FUNCTIONS"
.SS "create_uuid"
.IX Subsection "create_uuid"
.Vb 1
\&    my $uuid = create_uuid();
\&
\&    # "\ex95\ex5a\exe4\ex96\ex8b\exb2\ex45\ex0b\ex9c\ex7e\ex99\exf5\ex01\exdf\ex90\exfe"
.Ve
.PP
This returns a new \s-1UUID\s0 as a 16 byte 'binary' string.
.SS "create_uuid_hex"
.IX Subsection "create_uuid_hex"
.Vb 1
\&    my $uuid = create_uuid_hex();
\&
\&    # "955ae4968bb2450b9c7e99f501df90fe"
.Ve
.PP
This returns a new \s-1UUID\s0 as a 32\-byte hexadecimal string.
.SS "create_uuid_string"
.IX Subsection "create_uuid_string"
.Vb 1
\&    my $uuid = create_uuid_string();
\&
\&    # "955ae496\-8bb2\-450b\-9c7e\-99f501df90fe"
.Ve
.PP
This returns a new \s-1UUID\s0 in the 36\-byte \s-1RFC\-4122\s0 canonical string
representation.  (N.B. The canonical representation is lower-case.)
.SH "FORK AND THREAD SAFETY"
.IX Header "FORK AND THREAD SAFETY"
The underlying Crypt::URandom is believed to be fork and thread safe.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
There are a number of other modules that provide version 4 UUIDs.  Many
rely on insecure or non-crypto-strength random number generators.
.IP "\(bu" 4
Data::GUID::Any
.IP "\(bu" 4
Data::UUID::LibUUID
.IP "\(bu" 4
\&\s-1UUID\s0
.IP "\(bu" 4
UUID::Tiny
.IP "\(bu" 4
Data::UUID::MT
.SH "SUPPORT"
.IX Header "SUPPORT"
.SS "Bugs / Feature Requests"
.IX Subsection "Bugs / Feature Requests"
Please report any bugs or feature requests through the issue tracker
at <https://github.com/dagolden/UUID\-URandom/issues>.
You will be notified automatically of any progress on your issue.
.SS "Source Code"
.IX Subsection "Source Code"
This is open source software.  The code repository is available for
public review and contribution under the terms of the license.
.PP
<https://github.com/dagolden/UUID\-URandom>
.PP
.Vb 1
\&  git clone https://github.com/dagolden/UUID\-URandom.git
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
David Golden <dagolden@cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is Copyright (c) 2018 by David Golden.
.PP
This is free software, licensed under:
.PP
.Vb 1
\&  The Apache License, Version 2.0, January 2004
.Ve
