.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Encode::Unicode::UTF7 3"
.TH Encode::Unicode::UTF7 3 "2019-10-08" "perl v5.28.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Encode::Unicode::UTF7 \-\- UTF\-7 encoding
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 3
\&    use Encode qw/encode decode/; 
\&    $utf7 = encode("UTF\-7", $utf8);
\&    $utf8 = decode("UTF\-7", $ucs2);
.Ve
.SH "ABSTRACT"
.IX Header "ABSTRACT"
This module implements \s-1UTF\-7\s0 encoding documented in \s-1RFC 2152.\s0  \s-1UTF\-7,\s0
as its name suggests, is a 7\-bit re-encoded version of \s-1UTF\-16BE.\s0  It
is designed to be MTA-safe and expected to be a standard way to
exchange Unicoded mails via mails.  But with the advent of \s-1UTF\-8\s0 and
8\-bit compliant MTAs, \s-1UTF\-7\s0 is hardly ever used.
.PP
\&\s-1UTF\-7\s0 was not supported by Encode until version 1.95 because of that.
But Unicode::String, a module by Gisle Aas which adds Unicode supports
to non\-utf8\-savvy perl did support \s-1UTF\-7,\s0 the \s-1UTF\-7\s0 support was added
so Encode can supersede Unicode::String 100%.
.SH "In Practice"
.IX Header "In Practice"
When you want to encode Unicode for mails and web pages, however, do
not use \s-1UTF\-7\s0 unless you are sure your recipients and readers can
handle it.  Very few MUAs and \s-1WWW\s0 Browsers support these days (only
Mozilla seems to support one).  For general cases, use \s-1UTF\-8\s0 for
message body and MIME-Header for header instead.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Encode, Encode::Unicode, Unicode::String
.PP
\&\s-1RFC 2781\s0 <http://www.ietf.org/rfc/rfc2152.txt>
