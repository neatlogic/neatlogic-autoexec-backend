.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Spreadsheet::WriteExcel::Chart::Pie 3"
.TH Spreadsheet::WriteExcel::Chart::Pie 3 "2021-05-28" "perl v5.28.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Pie \- A writer class for Excel Pie charts.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
To create a simple Excel file with a Pie chart using Spreadsheet::WriteExcel:
.PP
.Vb 1
\&    #!/usr/bin/perl \-w
\&
\&    use strict;
\&    use Spreadsheet::WriteExcel;
\&
\&    my $workbook  = Spreadsheet::WriteExcel\->new( \*(Aqchart.xls\*(Aq );
\&    my $worksheet = $workbook\->add_worksheet();
\&
\&    my $chart     = $workbook\->add_chart( type => \*(Aqpie\*(Aq );
\&
\&    # Configure the chart.
\&    $chart\->add_series(
\&        categories => \*(Aq=Sheet1!$A$2:$A$7\*(Aq,
\&        values     => \*(Aq=Sheet1!$B$2:$B$7\*(Aq,
\&    );
\&
\&    # Add the worksheet data the chart refers to.
\&    my $data = [
\&        [ \*(AqCategory\*(Aq, 2, 3, 4, 5, 6, 7 ],
\&        [ \*(AqValue\*(Aq,    1, 4, 5, 2, 1, 5 ],
\&    ];
\&
\&    $worksheet\->write( \*(AqA1\*(Aq, $data );
\&
\&    _\|_END_\|_
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module implements Pie charts for Spreadsheet::WriteExcel. The chart object is created via the Workbook \f(CW\*(C`add_chart()\*(C'\fR method:
.PP
.Vb 1
\&    my $chart = $workbook\->add_chart( type => \*(Aqpie\*(Aq );
.Ve
.PP
Once the object is created it can be configured via the following methods that are common to all chart classes:
.PP
.Vb 2
\&    $chart\->add_series();
\&    $chart\->set_title();
.Ve
.PP
These methods are explained in detail in Spreadsheet::WriteExcel::Chart. Class specific methods or settings, if any, are explained below.
.SH "Pie Chart Methods"
.IX Header "Pie Chart Methods"
There aren't currently any pie chart specific methods. See the \s-1TODO\s0 section of Spreadsheet::WriteExcel::Chart.
.PP
A Pie chart doesn't have an X or Y axis so the following common chart methods are ignored.
.PP
.Vb 2
\&    $chart\->set_x_axis();
\&    $chart\->set_y_axis();
.Ve
.SH "EXAMPLE"
.IX Header "EXAMPLE"
Here is a complete example that demonstrates most of the available features when creating a chart.
.PP
.Vb 1
\&    #!/usr/bin/perl \-w
\&
\&    use strict;
\&    use Spreadsheet::WriteExcel;
\&
\&    my $workbook  = Spreadsheet::WriteExcel\->new( \*(Aqchart_pie.xls\*(Aq );
\&    my $worksheet = $workbook\->add_worksheet();
\&    my $bold      = $workbook\->add_format( bold => 1 );
\&
\&    # Add the worksheet data that the charts will refer to.
\&    my $headings = [ \*(AqCategory\*(Aq, \*(AqValues\*(Aq ];
\&    my $data = [
\&        [ \*(AqApple\*(Aq, \*(AqCherry\*(Aq, \*(AqPecan\*(Aq ],
\&        [ 60,       30,       10     ],
\&    ];
\&
\&    $worksheet\->write( \*(AqA1\*(Aq, $headings, $bold );
\&    $worksheet\->write( \*(AqA2\*(Aq, $data );
\&
\&    # Create a new chart object. In this case an embedded chart.
\&    my $chart = $workbook\->add_chart( type => \*(Aqpie\*(Aq, embedded => 1 );
\&
\&    # Configure the series.
\&    $chart\->add_series(
\&        name       => \*(AqPie sales data\*(Aq,
\&        categories => \*(Aq=Sheet1!$A$2:$A$4\*(Aq,
\&        values     => \*(Aq=Sheet1!$B$2:$B$4\*(Aq,
\&    );
\&
\&    # Add a title.
\&    $chart\->set_title( name => \*(AqPopular Pie Types\*(Aq );
\&
\&
\&    # Insert the chart into the worksheet (with an offset).
\&    $worksheet\->insert_chart( \*(AqC2\*(Aq, $chart, 25, 10 );
\&
\&    _\|_END_\|_
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
John McNamara jmcnamara@cpan.org
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright MM-MMX, John McNamara.
.PP
All Rights Reserved. This module is free software. It may be used, redistributed and/or modified under the same terms as Perl itself.
