.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Apache::SOAP 3"
.TH Apache::SOAP 3 "2021-07-27" "perl v5.16.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Apache::SOAP \- mod_perl\-based SOAP server with minimum configuration
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.IP "httpd.conf (Location), directory-based access" 4
.IX Item "httpd.conf (Location), directory-based access"
.Vb 6
\&  <Location /mod_soap>
\&    SetHandler perl\-script
\&    PerlHandler Apache::SOAP
\&    PerlSetVar dispatch_to "/Your/Path/To/Deployed/Modules, Module::Name, Module::method"
\&    PerlSetVar options "compress_threshold => 10000"
\&  </Location>
.Ve
.IP "httpd.conf (Files), file-based access" 4
.IX Item "httpd.conf (Files), file-based access"
.Vb 6
\&  <FilesMatch "\e.soap$">
\&    SetHandler perl\-script
\&    PerlHandler Apache::SOAP
\&    PerlSetVar dispatch_to "/Your/Path/To/Deployed/Modules, Module::Name, Module::method"
\&    PerlSetVar options "compress_threshold => 10000"
\&  </FilesMatch>
.Ve
.IP ".htaccess, directory-based access" 4
.IX Item ".htaccess, directory-based access"
.Vb 4
\&  SetHandler perl\-script
\&  PerlHandler Apache::SOAP
\&  PerlSetVar dispatch_to "/Your/Path/To/Deployed/Modules, Module::Name, Module::method"
\&  PerlSetVar options "compress_threshold => 10000"
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This Apache Perl module provides the ability to add support for \s-1SOAP \s0(Simple
Object Access Protocol) protocol with easy configuration (either in .conf or
in .htaccess file). This functionality should give you lightweight option
for hosting \s-1SOAP\s0 services and greatly simplify configuration aspects. This
module inherits functionality from SOAP::Transport::HTTP::Apache component
of SOAP::Lite module.
.SH "CONFIGURATION"
.IX Header "CONFIGURATION"
The module can be placed in <Location>, <Directory>, <Files>, <FilesMatch>
directives in main server configuration areas or directly in .htaccess file.
.PP
All parameters should be quoted and can be separated with commas or spaces
for lists (\*(L"a, b, c\*(R") and with 'wide arrows' and commas for hash parameters
(\*(L"key1 => value1, key2 => value2\*(R").
.PP
All options that you can find in SOAP::Transport::HTTP::Apache component
are available for configuration. Here is the description of most important
ones.
.IP "dispatch_to (\s-1LIST\s0)" 4
.IX Item "dispatch_to (LIST)"
Specifies path to directory that contains Perl modules you'd like to give
access to, or just list of modules (for preloaded modules).
.Sp
.Vb 1
\&  PerlSetVar dispatch_to "/Your/Path/To/Deployed/Modules, Module::Name, Module::method"
.Ve
.IP "options (\s-1HASH\s0)" 4
.IX Item "options (HASH)"
Specifies list of options for your module, for example threshold for
compression. Future versions will support more options. See
SOAP::Transport::HTTP documentation for other options.
.Sp
.Vb 1
\&  PerlSetVar options "compress_threshold => 10000"
.Ve
.SH "METHODS/SUBROUTINES"
.IX Header "METHODS/SUBROUTINES"
.SS "server"
.IX Subsection "server"
.Vb 1
\& my $server = Apache::XMLRPC::Lite\->server();
.Ve
.PP
Returns the server object.
.PP
Useful if you need to manipulate the server object from your code.
.SS "handle"
.IX Subsection "handle"
Request handler. Called by apache.
.SH "DEPENDENCIES"
.IX Header "DEPENDENCIES"
.Vb 2
\& SOAP::Lite
\& mod_perl
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.Vb 3
\& SOAP::Transport::HTTP::Apache for implementation details,
\& SOAP::Lite for general information, and
\& F<examples/server/mod_soap.htaccess> for .htaccess example
.Ve
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2000\-2001 Paul Kulchenko. All rights reserved.
.PP
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
.SH "AUTHOR"
.IX Header "AUTHOR"
Paul Kulchenko (paulclinger@yahoo.com)
