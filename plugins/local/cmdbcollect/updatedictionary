#!/usr/bin/python
# -*- coding:UTF-8 -*-

import AutoExecUtils
import os
import argparse
import sys
import json

binPaths = os.path.split(os.path.realpath(__file__))
libPath = os.path.realpath(binPaths[0]+'/../lib')
sys.path.append(libPath)


def usage():
    pname = os.path.basename(__file__)
    print(pname + " --lang <lang> eg : zh_CN or en_US ,default value zh_CN.\n")
    print('         --mode <mode> eg : truncate or append ,default value truncate.\n ')
    exit(1)


def loadJson(path):
    f = open(path, "r", encoding="utf-8")
    data = json.load(f)
    f.close()
    return data


if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument('--lang', default='', help='导入语言')
    parser.add_argument('--mode', default='', help='更新模式')
    args = parser.parse_args()
    lang = args.lang
    mode = args.mode

    if lang == None or lang == '':
        lang = 'zh_CN'
    if mode == None or mode == '':
        mode = 'truncate'

    (dbclient, db) = AutoExecUtils.getDB()

    current_path = os.path.abspath(__file__)
    path = current_path + "/../../../../i18n/cmdbcollect"
    path = os.path.abspath(path)
    dirs = os.listdir(path)
    table = '_dictionary'
    collection = db[table]

    if mode == 'truncate':
        collection.delete_one({'type': table})

    for dfile in dirs:
        info = dfile.split('.')
        if (info[1] == lang):
            print("INFO: Import", dfile, "start...")
            data = loadJson(path + "/" + dfile)
            tableName = "collect_"+info[0].strip()
            #data['type'] = tableName
            data['collection'] = tableName
            collection.replace_one({'collection': tableName}, data, upsert=True)
            collection.create_index([('collection', 1)], name='idx_pk', unique=True)
            print("INFO: Import", dfile, "success.")
    # 关闭连接
    dbclient.close()
