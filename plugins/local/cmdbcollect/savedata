#!/usr/bin/perl
use FindBin;
use lib "$FindBin::Bin/../lib/perl-lib/lib/perl5";
use lib "$FindBin::Bin/../lib";
use lib "$FindBin::Bin/";

use strict;
use IO::File;
use Getopt::Long;
use File::Basename;
use utf8;
use JSON;
use File::Slurper 'read_text';

use AutoExecUtils;
use CmdbUtils;

sub usage {
    my $pname = basename($0);

    print("Usage: $pname [-p|--param <param>] \n");
    print("       param: pre phase plugin output param key.\n");
    exit(1);
}

sub main {
    my ( $ishelp, $param );

    AutoExecUtils::setEnv();
    my $pname = basename($0);

    GetOptions(
        'help'      => \$ishelp,
        'h|param:s' => \$param
    );

    if ( not defined($param) or $param eq '' ) {
        usage();
        exit(0);
    }

    $param =~ s/#//;
    $param =~ s/\}//;
    $param =~ s/\{//;

    my @keys     = split /\./, $param;
    my $preName  = @keys[0];
    my $preOptId = @keys[1];
    my $preParam = @keys[2];

    my $isSuccess;
    my $AUTOEXEC_ROOTPATH = $ENV{'OUTPUT_ROOT_PATH'};
    my $AUTOEXEC_NODE     = $ENV{'AUTOEXEC_NODE'};
    my ( $targetIp, $targetPort );
    if ( defined $AUTOEXEC_NODE and $AUTOEXEC_NODE ne '' ) {
        $AUTOEXEC_NODE = decode_json($AUTOEXEC_NODE);
        $targetIp      = $AUTOEXEC_NODE->{host};
        $targetPort    = $AUTOEXEC_NODE->{port};
    }
    if ( not defined($targetIp) or not defined($targetPort) ) {
        print("ERROR:: must set node param env .\n");
        $isSuccess = 1;
    }
    else {
        my $cmdbUtil    = new CmdbUtils();
        my $outputName  = "$targetIp" . "-" . "$targetPort" . ".json";
        my $outputPath  = File::Spec->catfile( $AUTOEXEC_ROOTPATH, $outputName );
        my $output      = read_text($outputPath);
        my $output_json = decode_json($output);
        my $node_data   = $output_json->{$preOptId}->{$preParam};
        if ( defined($node_data) and $node_data ne '' ) {
            my $collect_data = $node_data->{data};
            foreach my $real_data (@$collect_data) {

                my $table      = $real_data->{'table'};
                my $uniqueName = $real_data->{'uniqueName'};
                my $data       = $real_data->{'data'};

                $isSuccess = $cmdbUtil->saveCollectData( table => $table, uniqueName => $uniqueName, data => $data );
                if ( $isSuccess ne 0 ) {
                    last;
                }
            }
        }
        else {
            print("ERROR:: collect data not exists or data format error .\n");
            $isSuccess = 1;
        }
    }
    if ( $isSuccess == 0 ) {
        print("INFO: $pname phase $preName $preOptId data save success.\n");
    }
    else {
        print("ERROR: $pname phase $preName $preOptId data save failed.\n");
    }
    return $isSuccess;
}

exit( main() );

