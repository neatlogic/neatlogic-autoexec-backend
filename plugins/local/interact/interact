#!/usr/bin/perl

use FindBin;
use lib $FindBin::Bin;
use lib "$FindBin::Bin/../lib";
use lib "$FindBin::Bin/../lib/perl-lib/lib/perl5";

use strict;
use Getopt::Long;
use JSON qw(from_json);

use AutoExecUtils;

sub usage {
    my $pname = basename($0);

    print("Usage: $pname --title <title> --message <message> --optype <button|input|select|mselect> --options <options to select> --role <privileged role name>\n");
    print(qq{Example: $pname --title "Confirm" --message "Confirm your operation, continue?" --optype "button", --options '["Yes", "No"]'\n});
    
    exit(1);
}

sub main {
    my ($title, $opType, $message, $options, $optionsJson, $role);

    GetOptions(
        'title=s' => \$title,
        'optype=s' => \$opType, 
        'message=s' => \$message,
        'optionsjson=s' => \$optionsJson,
        'role' => $role
        );

    my $rc = 0;

    my $hasOptError = 0;

    if ( not defined($title) ){
        $title = "Please Select";
    }

    if ( not defined($opType) ){
        $hasOptError = 1;
        print("ERROR: Must defined option optype.\n");
    }

    if ( not defined($message) ){
        $hasOptError = 1;
        print("ERROR: Must defined option message.\n");
    }

    if ( not defined($optionsJson) ){
        $hasOptError = 1;
        print("ERROR: Must defined option optionsjson.\n");
    }

    eval{
        $options = from_json($optionsJson);
    };
    if($@){
        print("ERROR: Options config:$optionsJson not in json array format, $@\n");
    }

    my $nodeInfo;
    my $nodeJson = $ENV{AUTOEXEC_NODE};
    if ( defined($nodeJson) and $nodeJson ne '' ) {
        $nodeInfo = from_json($nodeJson);
    }

    if ( not defined($nodeInfo) ) {
        $hasOptError = 1;
        print("ERROR: Must define node info environment varialble AUTOEXEC_NODE in json string.\n");
    }

    my $jobPath = $ENV{AUTOEXEC_WORK_PATH};
    if ( not defined($jobPath) or $jobPath eq '' ) {
        $jobPath = getcwd();
    }
    my $phaseName = $ENV{AUTOEXEC_PHASE_NAME};
    if ( not defined($phaseName) or $phaseName eq '' ) {
        $hasOptError = 1;
        print("WARN: phaseName not defined, must define environment variable AUTOEXEC_PHASE_NAME.\n");
        $phaseName = 'run';
    }

    if ( $hasOptError == 1 ){
        usage();
    }

    my $pipeFile = AutoExecUtils::getNodePipeFile( $jobPath, $phaseName, $nodeInfo );

    AutoExecUtils::informNodeWaitInput(
        $nodeInfo->{nodeId},
        title    => $title,
        opType     => $opType,
        message  => $message,
        options  => $options,
        role     => $role,
        pipeFile => $pipeFile
    );

    my ( $userId, $enter ) = AutoExecUtils::doInteract(
        title    => $title,
        opType     => $opType,
        message  => $message,
        options  => $options,
        role     => $role,
        pipeFile => $pipeFile
    );

    my $out = {};

    $out->{interactOut}     = $enter;
    AutoExecUtils::saveOutput($out);
    exit($rc);
}

main();

