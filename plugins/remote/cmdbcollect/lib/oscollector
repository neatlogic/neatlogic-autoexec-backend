#!/usr/bin/perl
use FindBin;
use lib $FindBin::Bin;

use strict;
use POSIX qw(uname);
use ProcessFinder;
use Data::Dumper;

sub main {
    my $apps = [];

    #获取收集网络信息的实现类
    my @uname       = uname();
    my $ostype      = $uname[0];
    my $gatherClass = "ConnGather$ostype";
    require "$gatherClass.pm";
    my $connGather = $gatherClass->new();

    my $cb = sub {

        #找到进程后的callback处理
        my ( $procInfo, $matchedProcsInfo ) = @_;

        $procInfo->{CONN_GATHER_CLASS} = $gatherClass;

        my $isMatched = 0;
        my $pid       = $procInfo->{PID};

        my $appType      = $procInfo->{APP_TYPE};
        my $appTypeClass = uc($appType) . "Collector";
        require "$appTypeClass.pm";
        my $collector = $appTypeClass->new( $procInfo, $matchedProcsInfo );
        my $appInfo = $collector->collect($procInfo);

        if ( defined($appInfo) ) {
            $isMatched = 1;

            $appInfo->{PROC_INFO} = $procInfo;
            $appInfo->{APP_TYPE}  = $appType;

            my $connInfo = $connGather->getConnInfo($pid);
            if ( defined($procInfo->{CONN_INFO}) ){
                push(@{$procInfo->{CONN_INFO}->{PEER}}, @{$connInfo->{PEER}});
            }else{
                $procInfo->{CONN_INFO} = $connInfo;
            }

            push( @$apps, $appInfo );
        }
        return $isMatched;
    };

    #这里的匹配是通过命令行加上环境变量的文本进行初步筛选判断
    #最终是否是需要的进程，还需要各个Collector进行增强性的判断。
    my $filterMap = {
        ActiveMQ => {
            regExps  => ['\ActiveMQ\s'],
            psAttrs  => {},
            envAttrs => {}
        },
        Tomcat => {
            regExps  => ['\borg.apache.catalina.startup.Bootstrap\s'],
            psAttrs  => { COMM => 'java' },
            envAttrs => {}
        },
        Apache => {
            regExps  => ['\bhttpd\s'],
            psAttrs  => { COMM => 'httpd' },
            envAttrs => {}
        }
    };

    my $pFinder = ProcessFinder->new( $filterMap, callback => $cb );
    $pFinder->findProcess();

    #TODO: save $apps to output
    print Dumper($apps);
}

main();
